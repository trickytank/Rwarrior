# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master, devel, beta, alpha]
  pull_request:
    branches: [main, master, devel, beta, alpha]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: Create secret-file.txt from TEST_S_GRADE_EPIC_AI
        id: secret-file1
        run: |
          $secretFile = Join-Path -Path $env:RUNNER_TEMP -ChildPath "tests";
          $secretFile = Join-Path -Path $secretFile -ChildPath "testthat";
          $secretFile = Join-Path -Path $secretFile -ChildPath "test_play_epic_S_grade.R";
          $encodedBytes = [System.Convert]::FromBase64String($env:SECRET_DATA1);
          Set-Content $secretFile -Value $encodedBytes -AsByteStream;
          $secretFileHash = Get-FileHash $secretFile;
          Write-Output "::set-output name=SECRET_FILE::$secretFile";
          Write-Output "::set-output name=SECRET_FILE_HASH::$($secretFileHash.Hash)";
          Write-Output "Secret file $secretFile has hash $($secretFileHash.Hash)";
        shell: pwsh
        env:
          SECRET_DATA1: ${{ secrets.B64_SECRET1 }}

      - name: Test coverage
        run: covr::codecov(quiet = FALSE)
        shell: Rscript {0}

      - name: Delete secret file
        run: |
          Remove-Item -Path $env:SECRET_FILE;
        shell: pwsh
        if: always()
        env:
          SECRET_FILE: ${{ steps.secret-file1.outputs.SECRET_FILE }}
